package com.sms.boot;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.mock.web.MockHttpServletResponse;
import org.springframework.mock.web.MockHttpSession;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.ResultActions;
import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultHandlers;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

import com.sms.boot.controller.CalenderController;

//@RunWith(SpringRunner.class)
@ExtendWith(SpringExtension.class)
@SpringBootTest(classes={Application.class})
@WebAppConfiguration
class ttt {

    @Autowired
    private WebApplicationContext wac;

    private MockMvc mvc;
    private MockHttpSession session;
    
    @BeforeEach
    public void setupMockMvc(){
        mvc = MockMvcBuilders.webAppContextSetup(wac).build();
//    	mvc = MockMvcBuilders.standaloneSetup(new CalenderController()).build();
//        session = new MockHttpSession();
//        session.setAttribute("UserId", 1);
    }
	

	@Test
    public void getAllEvent() throws Exception {
        mvc.perform(MockMvcRequestBuilders.get("/calender/showAllevent/1")
                    .contentType("text/html")
                    .accept(MediaType.APPLICATION_JSON)
            )
           .andExpect(MockMvcResultMatchers.status().isOk())
//           .andExpect(MockMvcResultMatchers.jsonPath("$.userId").value(1))
           .andExpect(MockMvcResultMatchers.jsonPath("$.eventTitle").value("assignment"))
           .andDo(MockMvcResultHandlers.print());
        
//        MockHttpServletRequestBuilder request = MockMvcRequestBuilders.get("/calender/showAllevent/1")
//                .contentType("text/html")
//                .accept(MediaType.APPLICATION_JSON);
//  
//        // (3)发送请求，获取请求结果
//        ResultActions perform = mvc.perform(request);
//  
//        // (4)请求结果校验
//        perform.andExpect(MockMvcResultMatchers.status().isOk());
//  
//        MvcResult mvcResult = perform.andReturn();
//        MockHttpServletResponse response = mvcResult.getResponse();
//  
// 
    }

}
